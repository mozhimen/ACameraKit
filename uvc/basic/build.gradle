apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                from components.release
//                groupId = 'com.mozhimen.camerak_base'
//                artifactId = 'camerak_base'
//                version = '1.0.0'
//            }
//        }
//    }
//}

android {
    compileSdk 34
    namespace "com.mozhimen.camerak.uvc.basic"

    defaultConfig {
        minSdk 18
        targetSdk 33
    }

    buildTypes {
        debug {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    api project(':uvc:uvccamera')
    implementation project(':ALibKit_Jetpack:annotation')
    implementation project(':ASwiftKit:basick')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    // CameraX core library using camera2 implementation
//    implementation "androidx.camera:camera-camera2:1.0.0-beta07"
//    // CameraX Lifecycle Library
//    implementation "androidx.camera:camera-lifecycle:1.0.0-beta07"
//    // CameraX View class
//    implementation "androidx.camera:camera-view:1.0.0-alpha14"
//    implementation "androidx.camera:camera-core:1.0.0-beta07"

}

def _BASENAME = project.name;
def _VERSION = "_V1.1.4";
def _DestinationPath = project.rootDir.absolutePath + "/repositories"; //生成jar包的位置
def zipFile = file('build/intermediates/aar_main_jar/release/classes.jar'); //待打包文件位置

task deleteBuild(type: Delete) {
    delete _DestinationPath + _BASENAME + _VERSION + ".jar"
}

//task makeJar(type:Jar){
//    from zipTree(zipFile)
//    from fileTree(dir:'src/main',includes:['assets/**']) //将assets目录打入jar包
//    baseName = _BASENAME + _VERSION
//    destinationDir = file(_DestinationPath)
//}

//makeJar.dependsOn(deleteBuild, build)

